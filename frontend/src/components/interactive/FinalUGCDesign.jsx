// frontend/src/components/interactive/FinalUGCDesign.jsx
// –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–µ–∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è API –≤–∏–∫–ª–∏–∫—ñ–≤

import React, { useState, useEffect, useMemo } from 'react';

// –Ü–º–ø–æ—Ä—Ç —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ API —Ä—ñ—à–µ–Ω–Ω—è
import { 
  APIProvider, 
  useHomepageData, 
  useServicesData, 
  useProjectsData,
  useHeroData,
  useFormSubmission,
  useCacheManager
} from '../../hooks/useUnifiedAPI';

// –Ü–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
import UnifiedBackground from './UnifiedBackground';
import ModernNavigation from './ModernNavigation';
import EnhancedHeroSection from './EnhancedHeroSection';

// –Ü–º–ø–æ—Ä—Ç —Å–µ–∫—Ü—ñ–π
import AboutSection from '../AboutSection';
import ServicesSection from '../ServicesSection';
import ProjectsSection from '../ProjectsSection';
import ContactSection from '../ContactSection';
import Footer from '../Footer';

// –í–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑ –¥–æ—Å—Ç—É–ø–æ–º –¥–æ API –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
const FinalUGCDesignContent = () => {
  // –õ–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
  const [activeSection, setActiveSection] = useState('home');
  const [scrollProgress, setScrollProgress] = useState(0);
  const [isInitialized, setIsInitialized] = useState(false);

  // API —Ö—É–∫–∏ (–±–µ–∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤)
  const homepage = useHomepageData();
  const services = useServicesData();
  const projects = useProjectsData();
  const heroData = useHeroData();
  const { submitForm, isSubmitting } = useFormSubmission();
  const { preloadCriticalData, getCacheStats } = useCacheManager();

  // –û–±'—î–¥–Ω–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
  const unifiedData = useMemo(() => ({
    homepage: homepage.data,
    services: services.data,
    projects: projects.data,
    hero: heroData.data,
    isLoading: homepage.isLoading || services.isLoading || projects.isLoading,
    hasErrors: !!(homepage.error || services.error || projects.error)
  }), [homepage, services, projects, heroData]);

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  useEffect(() => {
    const initialize = async () => {
      try {
        console.log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è FinalUGCDesign...');
        
        // –ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö
        const preloadResult = await preloadCriticalData();
        console.log('üìä –ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', preloadResult);
        
        setIsInitialized(true);
        
        // –õ–æ–≥—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à—É
        const cacheStats = getCacheStats();
        console.log('üíæ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à—É:', cacheStats);
        
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);
        setIsInitialized(true); // –í—Å–µ –æ–¥–Ω–æ –¥–æ–∑–≤–æ–ª—è—î–º–æ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏
      }
    };

    initialize();
  }, [preloadCriticalData, getCacheStats]);

  // –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å–∫—Ä–æ–ª—É
  useEffect(() => {
    const handleScroll = () => {
      const totalScroll = document.documentElement.scrollHeight - window.innerHeight;
      const currentScroll = window.scrollY;
      setScrollProgress((currentScroll / totalScroll) * 100);

      // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—ó —Å–µ–∫—Ü—ñ—ó
      const sections = ['home', 'about', 'services', 'projects', 'contact'];
      const sectionElements = sections.map(id => document.getElementById(id));
      
      let current = 'home';
      sectionElements.forEach((section, index) => {
        if (section) {
          const rect = section.getBoundingClientRect();
          if (rect.top <= 100 && rect.bottom >= 100) {
            current = sections[index];
          }
        }
      });
      
      setActiveSection(current);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è —Å–∫—Ä–æ–ª—É –¥–æ —Å–µ–∫—Ü—ñ—ó
  const scrollToSection = (sectionId) => {
    const element = document.getElementById(sectionId);
    if (element) {
      const offsetTop = element.offsetTop - 80;
      window.scrollTo({
        top: offsetTop,
        behavior: 'smooth'
      });
    }
  };

  // –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
  const handleContactSubmit = async (formData) => {
    try {
      const result = await submitForm('/contact-inquiries/', formData);
      
      if (result.success) {
        console.log('‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —Ñ–æ—Ä–º–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ');
        return { success: true, message: '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!' };
      } else {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏:', result.error);
        return { success: false, message: result.error || '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏' };
      }
    } catch (error) {
      console.error('‚ùå –í–∏–Ω—è—Ç–æ–∫ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ñ–æ—Ä–º–∏:', error);
      return { success: false, message: '–í–∏–Ω–∏–∫–ª–∞ –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞' };
    }
  };

  // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  if (!isInitialized) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-purple-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600 text-lg">–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É...</p>
          <p className="text-gray-500 text-sm mt-2">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö</p>
        </div>
      </div>
    );
  }

  return (
    <div className="relative min-h-screen">
      {/* –£–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —Ñ–æ–Ω */}
      <UnifiedBackground />
      
      {/* –ü—Ä–æ–≥—Ä–µ—Å —Å–∫—Ä–æ–ª—É */}
      <div 
        className="fixed top-0 left-0 h-1 bg-gradient-to-r from-blue-600 to-purple-600 z-50 transition-all duration-300"
        style={{ width: `${scrollProgress}%` }}
      />
      
      {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ—è */}
      <ModernNavigation 
        activeSection={activeSection}
        scrollToSection={scrollToSection}
        isLoading={unifiedData.isLoading}
      />
      
      {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="relative z-10">
        
        {/* Hero —Å–µ–∫—Ü—ñ—è */}
        <EnhancedHeroSection 
          scrollToSection={scrollToSection}
          heroData={unifiedData.hero}
          isLoading={unifiedData.isLoading}
        />
        
        {/* –ü—Ä–æ –Ω–∞—Å */}
        <AboutSection 
          data={unifiedData.homepage}
          scrollToSection={scrollToSection}
        />
        
        {/* –ü–æ—Å–ª—É–≥–∏ */}
        <ServicesSection 
          data={{ services: unifiedData.services }}
          scrollToSection={scrollToSection}
        />
        
        {/* –ü—Ä–æ–µ–∫—Ç–∏ */}
        <ProjectsSection 
          data={{ projects: unifiedData.projects }}
          scrollToSection={scrollToSection}
        />
        
        {/* –ö–æ–Ω—Ç–∞–∫—Ç–∏ */}
        <ContactSection 
          onSubmit={handleContactSubmit}
          isSubmitting={isSubmitting}
          scrollToSection={scrollToSection}
        />
      </main>
      
      {/* –§—É—Ç–µ—Ä */}
      <Footer />
      
      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–º–∏–ª–æ–∫ (—Ç—ñ–ª—å–∫–∏ –≤ dev mode) */}
      {process.env.NODE_ENV === 'development' && unifiedData.hasErrors && (
        <div className="fixed bottom-4 right-4 bg-red-500 text-white p-4 rounded-lg shadow-lg z-50">
          <div className="flex items-center">
            <span className="text-sm">‚ö†Ô∏è –î–µ—è–∫—ñ API endpoints –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ</span>
            <button 
              onClick={() => window.location.reload()}
              className="ml-2 text-xs bg-red-600 px-2 py-1 rounded hover:bg-red-700"
            >
              –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
            </button>
          </div>
        </div>
      )}
      
      {/* Debug —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (—Ç—ñ–ª—å–∫–∏ –≤ dev mode) */}
      {process.env.NODE_ENV === 'development' && (
        <div className="fixed bottom-4 left-4 bg-black bg-opacity-75 text-white p-2 rounded text-xs z-50">
          <div>Active: {activeSection}</div>
          <div>Progress: {Math.round(scrollProgress)}%</div>
          <div>Services: {unifiedData.services?.length || 0}</div>
          <div>Projects: {unifiedData.projects?.length || 0}</div>
          <div>Loading: {unifiedData.isLoading ? 'Yes' : 'No'}</div>
        </div>
      )}
    </div>
  );
};

// –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º
const FinalUGCDesign = () => {
  return (
    <APIProvider>
      <FinalUGCDesignContent />
    </APIProvider>
  );
};

export default FinalUGCDesign;