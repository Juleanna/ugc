import React, { useState, useEffect } from 'react';
import {
  Navbar,
  NavbarBrand,
  NavbarContent,
  NavbarItem,
  NavbarMenuToggle,
  NavbarMenu,
  NavbarMenuItem,
  Button,
  Card,
  CardBody,
  CardHeader,
  Input,
  Textarea,
  Chip,
  Badge,
  Modal,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalFooter,
  useDisclosure,
  Spinner,
  Divider,
  Link,
  Image,
  Progress
} from "@nextui-org/react";
import { 
  Home, 
  Info, 
  Briefcase, 
  FolderOpen, 
  Users, 
  Mail, 
  MapPin,
  Phone,
  Globe,
  ArrowRight,
  Star,
  Calendar,
  Send,
  CheckCircle,
  Building,
  Award,
  Zap,
  Target,
  TrendingUp,
  Heart,
  Shield,
  Lightbulb,
  ChevronRight,
  ExternalLink,
  Menu,
  X
} from 'lucide-react';

const API_BASE_URL = 'http://127.0.0.1:8000/api/v1';

// –£—Ç–∏–ª—ñ—Ç–∞ –¥–ª—è API –∑–∞–ø–∏—Ç—ñ–≤
const apiCall = async (endpoint) => {
  try {
    const response = await fetch(`${API_BASE_URL}${endpoint}`);
    if (!response.ok) throw new Error('Network error');
    return await response.json();
  } catch (error) {
    console.error('API Error:', error);
    return null;
  }
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
const Navigation = ({ activeSection, setActiveSection, translations = {} }) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const navigation = [
    { id: 'home', label: translations.home || '–ì–æ–ª–æ–≤–Ω–∞', icon: Home },
    { id: 'about', label: translations.about || '–ü—Ä–æ –Ω–∞—Å', icon: Info },
    { id: 'services', label: translations.services || '–ü–æ—Å–ª—É–≥–∏', icon: Briefcase },
    { id: 'projects', label: translations.projects || '–ü—Ä–æ—î–∫—Ç–∏', icon: FolderOpen },
    { id: 'jobs', label: translations.jobs || '–í–∞–∫–∞–Ω—Å—ñ—ó', icon: Users },
    { id: 'contact', label: translations.contact || '–ö–æ–Ω—Ç–∞–∫—Ç–∏', icon: Mail }
  ];

  return (
    <Navbar 
      onMenuOpenChange={setIsMenuOpen}
      className="bg-background/70 backdrop-blur-md border-b border-divider"
      maxWidth="xl"
      position="sticky"
    >
      <NavbarContent>
        <NavbarMenuToggle
          aria-label={isMenuOpen ? "Close menu" : "Open menu"}
          className="sm:hidden"
        />
        <NavbarBrand>
          <div className="flex items-center">
            <div className="bg-gradient-to-r from-primary to-secondary p-2 rounded-xl mr-3">
              <Globe className="h-6 w-6 text-white" />
            </div>
            <p className="font-bold text-2xl gradient-text">
              UGC
            </p>
          </div>
        </NavbarBrand>
      </NavbarContent>

      <NavbarContent className="hidden sm:flex gap-4" justify="center">
        {navigation.map((item) => {
          const Icon = item.icon;
          return (
            <NavbarItem key={item.id}>
              <Button
                variant={activeSection === item.id ? "solid" : "light"}
                color={activeSection === item.id ? "primary" : "default"}
                startContent={<Icon className="h-4 w-4" />}
                onPress={() => setActiveSection(item.id)}
                className="font-medium"
                radius="lg"
              >
                {item.label}
              </Button>
            </NavbarItem>
          );
        })}
      </NavbarContent>

      <NavbarMenu>
        {navigation.map((item) => {
          const Icon = item.icon;
          return (
            <NavbarMenuItem key={item.id}>
              <Button
                variant={activeSection === item.id ? "solid" : "light"}
                color={activeSection === item.id ? "primary" : "default"}
                startContent={<Icon className="h-4 w-4" />}
                onPress={() => {
                  setActiveSection(item.id);
                  setIsMenuOpen(false);
                }}
                className="w-full justify-start"
                size="lg"
                radius="lg"
              >
                {item.label}
              </Button>
            </NavbarMenuItem>
          );
        })}
      </NavbarMenu>
    </Navbar>
  );
};

// Hero —Å–µ–∫—Ü—ñ—è
const HeroSection = ({ homeData, translations = {} }) => {
  return (
    <section className="relative min-h-screen flex items-center overflow-hidden bg-gradient-to-br from-primary-50 via-secondary-50 to-primary-100 dark:from-primary-950 dark:via-secondary-950 dark:to-primary-900">
      {/* –ê–Ω—ñ–º–æ–≤–∞–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Ñ–æ–Ω—É */}
      <div className="absolute inset-0">
        <div className="absolute top-10 left-10 w-20 h-20 bg-primary-200 dark:bg-primary-800 rounded-full opacity-60 animate-float"></div>
        <div className="absolute top-40 right-20 w-32 h-32 bg-secondary-200 dark:bg-secondary-800 rounded-full opacity-40 animate-float" style={{ animationDelay: '1s' }}></div>
        <div className="absolute bottom-20 left-1/4 w-16 h-16 bg-primary-300 dark:bg-primary-700 rounded-full opacity-50 animate-float" style={{ animationDelay: '2s' }}></div>
      </div>

      <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 text-center">
        <Chip 
          color="primary" 
          variant="dot" 
          size="lg"
          className="mb-8"
        >
          üöÄ {translations.welcome || '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ'}
        </Chip>
        
        <h1 className="text-4xl sm:text-5xl lg:text-7xl font-bold mb-8">
          <span className="gradient-text">
            {homeData?.hero_title || translations.hero_title || '–Ü–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è'}
          </span>
          <br />
          <span className="text-foreground">
            –¥–ª—è –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É
          </span>
        </h1>
        
        <p className="text-xl lg:text-2xl text-default-600 mb-12 max-w-4xl mx-auto leading-relaxed">
          {homeData?.hero_description || translations.hero_description || '–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –ø–µ—Ä–µ–¥–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—á–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è, —è–∫—ñ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –∫–æ–º–ø–∞–Ω—ñ—è–º –¥–æ—Å—è–≥–∞—Ç–∏ –Ω–æ–≤–∏—Ö –≤–∏—Å–æ—Ç —É —Ü–∏—Ñ—Ä–æ–≤–æ–º—É —Å–≤—ñ—Ç—ñ'}
        </p>
        
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-16">
          <Button 
            color="primary" 
            size="lg" 
            variant="solid"
            endContent={<ArrowRight className="h-5 w-5" />}
            className="font-semibold px-8 py-3 text-lg"
            radius="xl"
          >
            {translations.get_started || '–ü–æ—á–∞—Ç–∏ –ø—Ä–æ—î–∫—Ç'}
          </Button>
          <Button 
            color="default" 
            variant="bordered"
            size="lg"
            endContent={<ExternalLink className="h-5 w-5" />}
            className="font-semibold px-8 py-3 text-lg"
            radius="xl"
          >
            {translations.learn_more || '–î—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ'}
          </Button>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
          {[
            { value: '5+', label: '–†–æ–∫—ñ–≤ –¥–æ—Å–≤—ñ–¥—É' },
            { value: '100+', label: '–ü—Ä–æ—î–∫—Ç—ñ–≤' },
            { value: '50+', label: '–ö–ª—ñ—î–Ω—Ç—ñ–≤' },
            { value: '24/7', label: '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞' }
          ].map((stat, index) => (
            <Card key={index} className="bg-background/60 backdrop-blur-md border-none shadow-lg">
              <CardBody className="text-center p-4">
                <div className="text-3xl font-bold gradient-text mb-2">{stat.value}</div>
                <div className="text-default-600 text-sm">{stat.label}</div>
              </CardBody>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
};

// –°–µ–∫—Ü—ñ—è –ø–æ—Å–ª—É–≥
const ServicesSection = ({ services, translations = {} }) => {
  return (
    <section className="py-20 bg-background">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <Chip color="secondary" variant="flat" size="lg" className="mb-6">
            ‚ö° {translations.our_services || '–ù–∞—à—ñ –ø–æ—Å–ª—É–≥–∏'}
          </Chip>
          <h2 className="text-4xl lg:text-5xl font-bold text-foreground mb-6">
            –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è
            <br />
            <span className="gradient-text">–¥–ª—è –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É</span>
          </h2>
          <p className="text-xl text-default-600 max-w-3xl mx-auto">
            {translations.services_description || '–ú–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –ø–æ–≤–Ω–∏–π —Å–ø–µ–∫—Ç—Ä IT-–ø–æ—Å–ª—É–≥ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É'}
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {services?.map((service, index) => (
            <Card 
              key={service.id || index} 
              className="group hover:scale-105 transition-all duration-300 cursor-pointer border-none shadow-lg hover:shadow-2xl"
              isPressable
            >
              <CardHeader className="flex gap-3 items-start pb-2">
                <div className="bg-gradient-to-r from-primary to-secondary p-3 rounded-2xl group-hover:scale-110 transition-transform duration-300">
                  <Briefcase className="h-6 w-6 text-white" />
                </div>
                <div className="flex flex-col flex-1">
                  <div className="flex items-center justify-between">
                    <h3 className="text-xl font-bold text-foreground group-hover:text-primary transition-colors">
                      {service.name || `–ü–æ—Å–ª—É–≥–∞ ${index + 1}`}
                    </h3>
                    {service.is_featured && (
                      <Badge content={<Star className="h-3 w-3" />} color="warning" variant="solid" />
                    )}
                  </div>
                </div>
              </CardHeader>
              <CardBody className="pt-0">
                <p className="text-default-600 mb-4 line-clamp-3">
                  {service.short_description || service.description || '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ø–æ—Å–ª—É–≥–∞ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º —Å—É—á–∞—Å–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π'}
                </p>
                <Button 
                  color="primary" 
                  variant="light" 
                  endContent={<ChevronRight className="h-4 w-4" />}
                  className="w-fit group-hover:bg-primary-50"
                  size="sm"
                >
                  {translations.learn_more || '–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ'}
                </Button>
              </CardBody>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
};

// –°–µ–∫—Ü—ñ—è –ø—Ä–æ—î–∫—Ç—ñ–≤
const ProjectsSection = ({ projects, translations = {} }) => {
  return (
    <section className="py-20 bg-default-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <Chip color="success" variant="flat" size="lg" className="mb-6">
            üéØ {translations.our_projects || '–ù–∞—à—ñ –ø—Ä–æ—î–∫—Ç–∏'}
          </Chip>
          <h2 className="text-4xl lg:text-5xl font-bold text-foreground mb-6">
            –ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ —É—Å–ø—ñ—à–Ω–∏—Ö
            <br />
            <span className="gradient-text">—Ä—ñ—à–µ–Ω—å</span>
          </h2>
          <p className="text-xl text-default-600 max-w-3xl mx-auto">
            {translations.projects_description || '–ü–æ–≥–ª—è–Ω—å—Ç–µ –Ω–∞ –ø—Ä–æ—î–∫—Ç–∏, —è–∫—ñ –º–∏ —Ä–µ–∞–ª—ñ–∑—É–≤–∞–ª–∏ –¥–ª—è –Ω–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤'}
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {projects?.map((project, index) => (
            <Card 
              key={project.id || index} 
              className="group hover:scale-105 transition-all duration-300 cursor-pointer border-none shadow-lg hover:shadow-2xl"
              isPressable
            >
              <CardHeader className="relative overflow-hidden p-0">
                <div className="w-full h-48 bg-gradient-to-br from-primary-300 to-secondary-300 flex items-center justify-center">
                  <FolderOpen className="h-16 w-16 text-white/80 group-hover:scale-110 transition-transform duration-300" />
                </div>
                {project.category && (
                  <Chip 
                    color="default" 
                    size="sm" 
                    variant="solid"
                    className="absolute top-3 right-3 bg-background/80 backdrop-blur-sm"
                  >
                    {project.category.name}
                  </Chip>
                )}
              </CardHeader>
              <CardBody>
                <h3 className="text-xl font-bold text-foreground mb-3 group-hover:text-primary transition-colors">
                  {project.name || `–ü—Ä–æ—î–∫—Ç ${index + 1}`}
                </h3>
                <p className="text-default-600 mb-4 line-clamp-2">
                  {project.short_description || project.description || '–Ü–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –±—ñ–∑–Ω–µ—Å—É –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º —Å—É—á–∞—Å–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π'}
                </p>
                <div className="flex items-center justify-between">
                  <Button 
                    color="primary" 
                    variant="light" 
                    size="sm"
                    endContent={<ChevronRight className="h-4 w-4" />}
                    className="group-hover:bg-primary-50"
                  >
                    {translations.view_project || '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏'}
                  </Button>
                  <div className="flex items-center text-default-400">
                    <Calendar className="h-4 w-4 mr-1" />
                    <span className="text-xs">2024</span>
                  </div>
                </div>
              </CardBody>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
};

// –°–µ–∫—Ü—ñ—è –≤–∞–∫–∞–Ω—Å—ñ–π
const JobsSection = ({ jobs, translations = {} }) => {
  return (
    <section className="py-20 bg-gradient-to-br from-primary-50 to-secondary-50 dark:from-primary-950 dark:to-secondary-950">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <Chip color="warning" variant="flat" size="lg" className="mb-6">
            üë• {translations.career || '–ö–∞—Ä\'—î—Ä–∞'}
          </Chip>
          <h2 className="text-4xl lg:text-5xl font-bold text-foreground mb-6">
            –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ –Ω–∞—à–æ—ó
            <br />
            <span className="gradient-text">–∫–æ–º–∞–Ω–¥–∏ –º—Ä—ñ–π–Ω–∏–∫—ñ–≤</span>
          </h2>
          <p className="text-xl text-default-600 max-w-3xl mx-auto">
            {translations.jobs_description || '–ó–Ω–∞–π–¥—ñ—Ç—å —Å–≤–æ—é —ñ–¥–µ–∞–ª—å–Ω—É –ø–æ–∑–∏—Ü—ñ—é –≤ –∫–æ–º–∞–Ω–¥—ñ –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª—ñ–≤'}
          </p>
        </div>

        <div className="space-y-6">
          {jobs?.map((job, index) => (
            <Card key={job.id || index} className="border-none shadow-lg hover:shadow-2xl transition-shadow duration-300">
              <CardBody className="p-8">
                <div className="flex flex-col lg:flex-row lg:items-center justify-between gap-6">
                  <div className="flex-1">
                    <div className="flex items-start gap-4 mb-4">
                      <div className="bg-gradient-to-r from-primary to-secondary p-3 rounded-2xl">
                        <Users className="h-6 w-6 text-white" />
                      </div>
                      <div className="flex-1">
                        <div className="flex items-center gap-3 mb-3">
                          <h3 className="text-2xl font-bold text-foreground">
                            {job.title || `–í–∞–∫–∞–Ω—Å—ñ—è ${index + 1}`}
                          </h3>
                          {job.is_urgent && (
                            <Chip color="danger" size="sm" variant="flat">
                              ‚ö° {translations.urgent || '–¢–µ—Ä–º—ñ–Ω–æ–≤–æ'}
                            </Chip>
                          )}
                        </div>
                        
                        <div className="flex flex-wrap gap-4 mb-4">
                          <div className="flex items-center gap-2 text-default-600">
                            <MapPin className="h-4 w-4" />
                            <span className="text-sm">{job.location || '–í—ñ–¥–¥–∞–ª–µ–Ω–æ'}</span>
                          </div>
                          <div className="flex items-center gap-2 text-default-600">
                            <Calendar className="h-4 w-4" />
                            <span className="text-sm">{job.employment_type || '–ü–æ–≤–Ω–∞ –∑–∞–π–Ω—è—Ç—ñ—Å—Ç—å'}</span>
                          </div>
                          <div className="flex items-center gap-2 text-default-600">
                            <Building className="h-4 w-4" />
                            <span className="text-sm">{job.department || 'IT –≤—ñ–¥–¥—ñ–ª'}</span>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <p className="text-default-600 leading-relaxed">
                      {job.short_description || job.description || '–¶—ñ–∫–∞–≤–∞ –≤–∞–∫–∞–Ω—Å—ñ—è –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –∫–∞—Ä\'—î—Ä–∏ –≤ IT —Å—Ñ–µ—Ä—ñ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞–¥ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω–∏–º–∏ –ø—Ä–æ—î–∫—Ç–∞–º–∏'}
                    </p>
                  </div>
                  
                  <div className="flex flex-col gap-3 lg:ml-6">
                    <Button 
                      color="primary" 
                      variant="solid"
                      endContent={<Send className="h-4 w-4" />}
                      className="font-semibold"
                      size="lg"
                    >
                      {translations.apply || '–ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É'}
                    </Button>
                    <Button 
                      color="default" 
                      variant="bordered"
                      size="lg"
                    >
                      {translations.details || '–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ'}
                    </Button>
                  </div>
                </div>
              </CardBody>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
};

// –°–µ–∫—Ü—ñ—è "–ü—Ä–æ –Ω–∞—Å"
const AboutSection = ({ aboutData, translations = {} }) => {
  const features = [
    {
      icon: Target,
      title: translations.quality || '–Ø–∫—ñ—Å—Ç—å',
      description: translations.quality_description || '–ú–∏ –∑–∞–≤–∂–¥–∏ –ø—Ä–∞–≥–Ω–µ–º–æ –¥–æ –Ω–∞–π–≤–∏—â–æ—ó —è–∫–æ—Å—Ç—ñ –≤ —É—Å—å–æ–º—É, —â–æ —Ä–æ–±–∏–º–æ',
      color: 'primary'
    },
    {
      icon: Users,
      title: translations.team || '–ö–æ–º–∞–Ω–¥–∞',
      description: translations.team_description || '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ - —Ü–µ –¥–æ—Å–≤—ñ–¥—á–µ–Ω—ñ –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª–∏, —è–∫—ñ –ø—Ä–∞—Ü—é—é—Ç—å —Ä–∞–∑–æ–º',
      color: 'secondary'
    },
    {
      icon: Lightbulb,
      title: translations.innovation || '–Ü–Ω–Ω–æ–≤–∞—Ü—ñ—ó',
      description: translations.innovation_description || '–ú–∏ –ø–æ—Å—Ç—ñ–π–Ω–æ —à—É–∫–∞—î–º–æ –Ω–æ–≤—ñ —Å–ø–æ—Å–æ–±–∏ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å',
      color: 'success'
    }
  ];

  return (
    <section className="py-20 bg-background">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <Chip color="secondary" variant="flat" size="lg" className="mb-6">
            üè¢ {translations.about_us || '–ü—Ä–æ –Ω–∞—Å'}
          </Chip>
          <h2 className="text-4xl lg:text-5xl font-bold text-foreground mb-6">
            –•—Ç–æ –º–∏ —ñ —á–∏–º
            <br />
            <span className="gradient-text">–∑–∞–π–º–∞—î–º–æ—Å—è</span>
          </h2>
          <p className="text-xl text-default-600 max-w-3xl mx-auto">
            {aboutData?.subtitle || translations.about_description || '–î—ñ–∑–Ω–∞–π—Ç–µ—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –Ω–∞—à—É –∫–æ–º–ø–∞–Ω—ñ—é —Ç–∞ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ'}
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-16 items-center mb-20">
          <div>
            <h3 className="text-3xl font-bold text-foreground mb-6">
              {aboutData?.mission_title || translations.our_mission || '–ù–∞—à–∞ –º—ñ—Å—ñ—è'}
            </h3>
            <p className="text-lg text-default-600 mb-8 leading-relaxed">
              {aboutData?.mission_description || translations.mission_description || '–ú–∏ –ø—Ä–∞–≥–Ω–µ–º–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è, —è–∫—ñ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –Ω–∞—à–∏–º –∫–ª—ñ—î–Ω—Ç–∞–º –¥–æ—Å—è–≥–∞—Ç–∏ —É—Å–ø—ñ—Ö—É –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É —Å–≤—ñ—Ç—ñ. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ–±\'—î–¥–Ω—É—î –¥–æ—Å–≤—ñ–¥, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ç–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—á–Ω—É –µ–∫—Å–ø–µ—Ä—Ç–∏–∑—É.'}
            </p>
            
            <div className="space-y-6">
              {features.map((feature, index) => {
                const Icon = feature.icon;
                return (
                  <div key={index} className="flex items-start gap-4 group">
                    <div className={`bg-${feature.color} p-4 rounded-2xl shadow-lg group-hover:scale-110 transition-transform duration-300`}>
                      <Icon className="h-6 w-6 text-white" />
                    </div>
                    <div>
                      <h4 className="font-bold text-foreground mb-2 text-lg">
                        {feature.title}
                      </h4>
                      <p className="text-default-600 leading-relaxed">
                        {feature.description}
                      </p>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
          
          <Card className="bg-gradient-to-br from-primary-50 to-secondary-50 dark:from-primary-950 dark:to-secondary-950 border-2 border-primary-200 dark:border-primary-800">
            <CardBody className="p-8 text-center">
              <div className="bg-gradient-to-r from-primary to-secondary text-white p-6 rounded-2xl w-24 h-24 mx-auto mb-8 flex items-center justify-center shadow-xl">
                <Globe className="h-12 w-12" />
              </div>
              
              <h4 className="text-2xl font-bold text-foreground mb-4">
                {aboutData?.company_name || 'UGC Company'}
              </h4>
              
              <p className="text-default-600 mb-8 leading-relaxed">
                {aboutData?.company_description || translations.company_description || '–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –º–∞–π–±—É—Ç–Ω—î —Ä–∞–∑–æ–º –∑ –Ω–∞—à–∏–º–∏ –∫–ª—ñ—î–Ω—Ç–∞–º–∏, –Ω–∞–¥–∞—é—á–∏ –Ω–∞–π–∫—Ä–∞—â—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—á–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è —Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó.'}
              </p>
              
              <div className="grid grid-cols-2 gap-6 mb-8">
                <Card className="bg-background/60 backdrop-blur-sm">
                  <CardBody className="text-center p-4">
                    <div className="text-3xl font-bold gradient-text mb-2">5+</div>
                    <div className="text-sm text-default-600 font-medium">
                      {translations.years_experience || '–†–æ–∫—ñ–≤ –¥–æ—Å–≤—ñ–¥—É'}
                    </div>
                  </CardBody>
                </Card>
                <Card className="bg-background/60 backdrop-blur-sm">
                  <CardBody className="text-center p-4">
                    <div className="text-3xl font-bold gradient-text mb-2">100+</div>
                    <div className="text-sm text-default-600 font-medium">
                      {translations.projects_completed || '–ó–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –ø—Ä–æ—î–∫—Ç—ñ–≤'}
                    </div>
                  </CardBody>
                </Card>
              </div>
              
              <Button 
                variant="bordered" 
                color="primary"
                startContent={<Heart className="h-4 w-4" />}
                size="lg"
              >
                {translations.join_team || '–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –∫–æ–º–∞–Ω–¥–∏'}
              </Button>
            </CardBody>
          </Card>
        </div>

        {/* –¶—ñ–Ω–Ω–æ—Å—Ç—ñ –∫–æ–º–ø–∞–Ω—ñ—ó */}
        <div className="text-center mb-12">
          <h3 className="text-3xl font-bold text-foreground mb-4">
            {translations.our_values || '–ù–∞—à—ñ —Ü—ñ–Ω–Ω–æ—Å—Ç—ñ'}
          </h3>
          <p className="text-lg text-default-600 max-w-2xl mx-auto">
            {translations.values_description || '–ü—Ä–∏–Ω—Ü–∏–ø–∏, —è–∫–∏–º–∏ –º–∏ –∫–µ—Ä—É—î–º–æ—Å—è —É —Å–≤–æ—ó–π —Ä–æ–±–æ—Ç—ñ'}
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {[
            {
              icon: Shield,
              title: translations.reliability || '–ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å',
              description: translations.reliability_description || '–ú–∏ –∑–∞–≤–∂–¥–∏ –≤–∏–∫–æ–Ω—É—î–º–æ —Å–≤–æ—ó –∑–æ–±–æ–≤\'—è–∑–∞–Ω–Ω—è –≤ —Å—Ç—Ä–æ–∫ —Ç–∞ –∑ –≤–∏—Å–æ–∫–æ—é —è–∫—ñ—Å—Ç—é',
              color: 'primary'
            },
            {
              icon: TrendingUp,
              title: translations.growth || '–†–æ–∑–≤–∏—Ç–æ–∫',
              description: translations.growth_description || '–ú–∏ –ø–æ—Å—Ç—ñ–π–Ω–æ –≤–¥–æ—Å–∫–æ–Ω–∞–ª—é—î–º–æ—Å—è —Ç–∞ —Å–ª—ñ–¥–∫—É—î–º–æ –∑–∞ –Ω–æ–≤–∏–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è–º–∏',
              color: 'secondary'
            },
            {
              icon: Award,
              title: translations.excellence || '–î–æ—Å–∫–æ–Ω–∞–ª—ñ—Å—Ç—å',
              description: translations.excellence_description || '–ú–∏ –ø—Ä–∞–≥–Ω–µ–º–æ –¥–æ –¥–æ—Å–∫–æ–Ω–∞–ª–æ—Å—Ç—ñ –≤ –∫–æ–∂–Ω–æ–º—É –ø—Ä–æ—î–∫—Ç—ñ',
              color: 'success'
            }
          ].map((value, index) => {
            const Icon = value.icon;
            return (
              <Card key={index} className={`group hover:bg-${value.color}-50 dark:hover:bg-${value.color}-950 transition-colors border-none shadow-lg hover:shadow-xl`}>
                <CardBody className="p-8 text-center">
                  <div className={`bg-${value.color} p-4 rounded-2xl w-16 h-16 mx-auto mb-6 group-hover:scale-110 transition-transform duration-300`}>
                    <Icon className="h-8 w-8 text-white" />
                  </div>
                  <h4 className="text-xl font-bold text-foreground mb-4">
                    {value.title}
                  </h4>
                  <p className="text-default-600">
                    {value.description}
                  </p>
                </CardBody>
              </Card>
            );
          })}
        </div>
      </div>
    </section>
  );
};

// –°–µ–∫—Ü—ñ—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
const ContactSection = ({ offices, translations = {} }) => {
  const [contactForm, setContactForm] = useState({
    name: '',
    email: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const { isOpen, onOpen, onOpenChange } = useDisclosure();

  const handleInputChange = (field, value) => {
    setContactForm(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    try {
      const response = await fetch(`${API_BASE_URL}/contact-inquiries/`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(contactForm)
      });
      
      if (response.ok) {
        onOpen();
        setContactForm({ name: '', email: '', message: '' });
      }
    } catch (error) {
      console.error('Error:', error);
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <section className="py-20 bg-default-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <Chip color="primary" variant="flat" size="lg" className="mb-6">
            üìû {translations.contact_us || '–ó–≤\'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏'}
          </Chip>
          <h2 className="text-4xl lg:text-5xl font-bold text-foreground mb-6">
            –ì–æ—Ç–æ–≤—ñ –ø–æ—á–∞—Ç–∏
            <br />
            <span className="gradient-text">–≤–∞—à –ø—Ä–æ—î–∫—Ç?</span>
          </h2>
          <p className="text-xl text-default-600 max-w-3xl mx-auto">
            {translations.contact_description || '–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º —ñ –º–∏ –æ–±–≥–æ–≤–æ—Ä–∏–º–æ –≤–∞—à—ñ —ñ–¥–µ—ó'}
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
          {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
          <div className="space-y-8">
            <h3 className="text-3xl font-bold text-foreground mb-8">
              {translations.our_offices || '–ù–∞—à—ñ –æ—Ñ—ñ—Å–∏'}
            </h3>
            
            {offices?.map((office, index) => (
              <Card key={office.id || index} className="border-none shadow-lg">
                <CardBody className="p-6">
                  <h4 className="text-xl font-bold text-foreground mb-4 flex items-center">
                    <Building className="h-5 w-5 mr-2 text-primary" />
                    {office.name || `–û—Ñ—ñ—Å ${index + 1}`}
                  </h4>
                  <div className="space-y-3">
                    <div className="flex items-start gap-3 text-default-600">
                      <MapPin className="h-5 w-5 text-primary mt-0.5" />
                      <span>{office.address || '–ö–∏—ó–≤, –£–∫—Ä–∞—ó–Ω–∞, –≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫ 1'}</span>
                    </div>
                    <div className="flex items-center gap-3 text-default-600">
                      <Phone className="h-5 w-5 text-primary" />
                      <span>{office.phone || '+380 XX XXX XX XX'}</span>
                    </div>
                    <div className="flex items-center gap-3 text-default-600">
                      <Mail className="h-5 w-5 text-primary" />
                      <span>{office.email || 'office@ugc.com'}</span>
                    </div>
                  </div>
                </CardBody>
              </Card>
            ))}
          </div>

          {/* –§–æ—Ä–º–∞ –∑–≤'—è–∑–∫—É */}
          <Card className="border-none shadow-xl">
            <CardHeader>
              <h3 className="text-2xl font-bold text-foreground">
                {translations.send_message || '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'}
              </h3>
            </CardHeader>
            <CardBody className="space-y-6">
              <Input
                label={translations.name || '–Ü–º\'—è'}
                placeholder={translations.name_placeholder || '–í–∞—à–µ —ñ–º\'—è'}
                value={contactForm.name}
                onValueChange={(value) => handleInputChange('name', value)}
                variant="bordered"
                size="lg"
                startContent={<Users className="h-4 w-4 text-default-400" />}
                isRequired
              />
              <Input
                label={translations.email || 'Email'}
                placeholder={translations.email_placeholder || 'your@email.com'}
                value={contactForm.email}
                onValueChange={(value) => handleInputChange('email', value)}
                variant="bordered"
                size="lg"
                type="email"
                startContent={<Mail className="h-4 w-4 text-default-400" />}
                isRequired
              />
              <Textarea
                label={translations.message || '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'}
                placeholder={translations.message_placeholder || '–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ –≤–∞—à –ø—Ä–æ—î–∫—Ç...'}
                value={contactForm.message}
                onValueChange={(value) => handleInputChange('message', value)}
                variant="bordered"
                minRows={4}
                size="lg"
                isRequired
              />
              <Button
                color="primary"
                size="lg"
                onPress={handleSubmit}
                isLoading={isSubmitting}
                endContent={!isSubmitting && <Send className="h-4 w-4" />}
                className="w-full font-semibold"
              >
                {isSubmitting ? '–ù–∞–¥—Å–∏–ª–∞—î—Ç—å—Å—è...' : (translations.send || '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è')}
              </Button>
            </CardBody>
          </Card>
        </div>

        {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —É—Å–ø—ñ—Ö—É */}
        <Modal isOpen={isOpen} onOpenChange={onOpenChange} placement="center">
          <ModalContent>
            {(onClose) => (
              <>
                <ModalHeader className="flex flex-col gap-1">
                  <div className="flex items-center gap-2">
                    <CheckCircle className="h-6 w-6 text-success" />
                    <span>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!</span>
                  </div>
                </ModalHeader>
                <ModalBody>
                  <p className="text-default-600">
                    –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.
                  </p>
                </ModalBody>
                <ModalFooter>
                  <Button color="primary" onPress={onClose}>
                    –ó—Ä–æ–∑—É–º—ñ–ª–æ
                  </Button>
                </ModalFooter>
              </>
            )}
          </ModalContent>
        </Modal>
      </div>
    </section>
  );
};

// –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–¥–∞—Ç–∫—É
const App = () => {
  const [activeSection, setActiveSection] = useState('home');
  const [data, setData] = useState({
    homepage: [],
    about: [],
    services: [],
    projects: [],
    jobs: [],
    offices: [],
    translations: {}
  });
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadData = async () => {
      setLoading(true);
      
      const [
        homepageResponse,
        aboutResponse,
        servicesResponse,
        projectsResponse,
        jobsResponse,
        officesResponse,
        translationsResponse
      ] = await Promise.all([
        apiCall('/homepage/'),
        apiCall('/about/'),
        apiCall('/services/'),
        apiCall('/projects/'),
        apiCall('/jobs/'),
        apiCall('/offices/'),
        apiCall('/translations/')
      ]);

      setData({
        homepage: homepageResponse?.results || [],
        about: aboutResponse?.results || [],
        services: servicesResponse?.results || [],
        projects: projectsResponse?.results || [],
        jobs: jobsResponse?.results || [],
        offices: officesResponse?.results || [],
        translations: translationsResponse || {}
      });
      
      setLoading(false);
    };

    loadData();
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-primary-50 to-secondary-50">
        <div className="text-center">
          <Spinner 
            size="lg" 
            color="primary" 
            className="mb-4"
          />
          <p className="text-default-600 text-lg font-medium">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
          <p className="text-default-500 text-sm mt-2">–ü—ñ–¥–≥–æ—Ç–æ–≤—É—î–º–æ –¥–ª—è –≤–∞—Å –Ω–∞–π–∫—Ä–∞—â–∏–π –¥–æ—Å–≤—ñ–¥</p>
        </div>
      </div>
    );
  }

  const homeData = data.homepage[0];
  const aboutData = data.about[0];

  return (
    <div className="min-h-screen bg-background">
      <Navigation 
        activeSection={activeSection} 
        setActiveSection={setActiveSection}
        translations={data.translations}
      />
      
      <main>
        {activeSection === 'home' && (
          <>
            <HeroSection homeData={homeData} translations={data.translations} />
            <ServicesSection services={data.services} translations={data.translations} />
            <ProjectsSection projects={data.projects} translations={data.translations} />
          </>
        )}
        
        {activeSection === 'about' && (
          <AboutSection aboutData={aboutData} translations={data.translations} />
        )}
        
        {activeSection === 'services' && (
          <ServicesSection services={data.services} translations={data.translations} />
        )}
        
        {activeSection === 'projects' && (
          <ProjectsSection projects={data.projects} translations={data.translations} />
        )}
        
        {activeSection === 'jobs' && (
          <JobsSection jobs={data.jobs} translations={data.translations} />
        )}
        
        {activeSection === 'contact' && (
          <ContactSection offices={data.offices} translations={data.translations} />
        )}
      </main>

      {/* –§—É—Ç–µ—Ä */}
      <footer className="bg-foreground text-background relative overflow-hidden">
        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ */}
        <div className="absolute inset-0">
          <div className="absolute top-0 left-0 w-64 h-64 bg-primary rounded-full opacity-10 -translate-x-32 -translate-y-32"></div>
          <div className="absolute bottom-0 right-0 w-96 h-96 bg-secondary rounded-full opacity-10 translate-x-48 translate-y-48"></div>
        </div>
        
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8 mb-12">
            {/* –õ–æ–≥–æ—Ç–∏–ø —Ç–∞ –æ–ø–∏—Å */}
            <div className="md:col-span-2">
              <div className="flex items-center mb-6">
                <div className="bg-gradient-to-r from-primary to-secondary p-3 rounded-xl mr-4">
                  <Globe className="h-8 w-8 text-white" />
                </div>
                <span className="text-3xl font-bold gradient-text">
                  UGC
                </span>
              </div>
              <p className="text-default-400 mb-6 max-w-md leading-relaxed">
                {data.translations.footer_description || '–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—á–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É —Å–≤—ñ—Ç—ñ.'}
              </p>
              <div className="flex gap-4">
                <Button 
                  isIconOnly 
                  variant="flat" 
                  color="primary"
                  aria-label="Website"
                >
                  <Globe className="h-5 w-5" />
                </Button>
                <Button 
                  isIconOnly 
                  variant="flat" 
                  color="primary"
                  aria-label="LinkedIn"
                >
                  <Users className="h-5 w-5" />
                </Button>
                <Button 
                  isIconOnly 
                  variant="flat" 
                  color="primary"
                  aria-label="Email"
                >
                  <Mail className="h-5 w-5" />
                </Button>
              </div>
            </div>

            {/* –®–≤–∏–¥–∫—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è */}
            <div>
              <h4 className="font-bold text-background mb-6 text-lg">
                {data.translations.quick_links || '–®–≤–∏–¥–∫—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è'}
              </h4>
              <div className="space-y-2">
                {[
                  { id: 'about', label: data.translations.about || '–ü—Ä–æ –Ω–∞—Å' },
                  { id: 'services', label: data.translations.services || '–ü–æ—Å–ª—É–≥–∏' },
                  { id: 'projects', label: data.translations.projects || '–ü—Ä–æ—î–∫—Ç–∏' },
                  { id: 'jobs', label: data.translations.jobs || '–í–∞–∫–∞–Ω—Å—ñ—ó' }
                ].map((link) => (
                  <Button 
                    key={link.id}
                    variant="light" 
                    size="sm" 
                    className="justify-start p-0 h-auto text-default-400 hover:text-background"
                    onPress={() => setActiveSection(link.id)}
                  >
                    {link.label}
                  </Button>
                ))}
              </div>
            </div>

            {/* –ö–æ–Ω—Ç–∞–∫—Ç–∏ */}
            <div>
              <h4 className="font-bold text-background mb-6 text-lg">
                {data.translations.contact || '–ö–æ–Ω—Ç–∞–∫—Ç–∏'}
              </h4>
              <div className="space-y-4">
                <div className="flex items-start gap-3 text-default-400">
                  <MapPin className="h-5 w-5 text-primary mt-0.5" />
                  <span className="text-sm">
                    {data.offices[0]?.address || '–ö–∏—ó–≤, –£–∫—Ä–∞—ó–Ω–∞'}
                  </span>
                </div>
                <div className="flex items-center gap-3 text-default-400">
                  <Phone className="h-5 w-5 text-primary" />
                  <span className="text-sm">
                    {data.offices[0]?.phone || '+380 XX XXX XX XX'}
                  </span>
                </div>
                <div className="flex items-center gap-3 text-default-400">
                  <Mail className="h-5 w-5 text-primary" />
                  <span className="text-sm">
                    {data.offices[0]?.email || 'contact@ugc.com'}
                  </span>
                </div>
              </div>
            </div>
          </div>

          <Divider className="my-8 bg-default-300" />
          
          <div className="flex flex-col md:flex-row justify-between items-center gap-4">
            <p className="text-default-500 text-sm">
              ¬© 2024 UGC. {data.translations.all_rights_reserved || '–í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.'}
            </p>
            <div className="flex gap-6">
              <Button 
                variant="light" 
                size="sm" 
                className="text-default-500 p-0 h-auto hover:text-background"
              >
                {data.translations.privacy_policy || '–ü–æ–ª—ñ—Ç–∏–∫–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ'}
              </Button>
              <Button 
                variant="light" 
                size="sm" 
                className="text-default-500 p-0 h-auto hover:text-background"
              >
                {data.translations.terms_of_service || '–£–º–æ–≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'}
              </Button>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default App;