# backend/create_translation_files.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —Å–∏—Å—Ç–µ–º–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
"""
import os
from pathlib import Path

def create_file_structure():
    """–°—Ç–≤–æ—Ä—é—î –Ω–µ–æ–±—Ö—ñ–¥–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª—ñ–≤"""
    
    # –ë–∞–∑–æ–≤–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è
    base_dir = Path(__file__).parent
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
    directories = [
        "apps/api/utils",
        "apps/api/views", 
        "apps/api/management",
        "apps/api/management/commands",
        "static_translations",
        "frontend_translations",
    ]
    
    for directory in directories:
        dir_path = base_dir / directory
        dir_path.mkdir(parents=True, exist_ok=True)
        print(f"üìÅ –°—Ç–≤–æ—Ä–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é: {dir_path}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ __init__.py —Ñ–∞–π–ª–∏
        if "apps/" in directory:
            init_file = dir_path / "__init__.py"
            if not init_file.exists():
                init_file.touch()
                print(f"üìÑ –°—Ç–≤–æ—Ä–µ–Ω–æ: {init_file}")

def create_basic_init_files():
    """–°—Ç–≤–æ—Ä—é—î –±–∞–∑–æ–≤—ñ __init__.py —Ñ–∞–π–ª–∏"""
    
    files_content = {
        "apps/__init__.py": "",
        "apps/api/__init__.py": "",
        "apps/api/utils/__init__.py": "",
        "apps/api/views/__init__.py": "",
        "apps/api/management/__init__.py": "",
        "apps/api/management/commands/__init__.py": "",
    }
    
    base_dir = Path(__file__).parent
    
    for file_path, content in files_content.items():
        full_path = base_dir / file_path
        full_path.parent.mkdir(parents=True, exist_ok=True)
        
        if not full_path.exists():
            with open(full_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"üìÑ –°—Ç–≤–æ—Ä–µ–Ω–æ: {full_path}")

def create_basic_translation_files():
    """–°—Ç–≤–æ—Ä—é—î –±–∞–∑–æ–≤—ñ —Ñ–∞–π–ª–∏ JSON –∑ –ø–µ—Ä–µ–∫–ª–∞–¥–∞–º–∏"""
    
    base_dir = Path(__file__).parent
    
    # –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
    uk_translations = {
        "nav.home": "–ì–æ–ª–æ–≤–Ω–∞",
        "nav.about": "–ü—Ä–æ –Ω–∞—Å", 
        "nav.services": "–ü–æ—Å–ª—É–≥–∏",
        "nav.projects": "–ü—Ä–æ–µ–∫—Ç–∏",
        "nav.contact": "–ö–æ–Ω—Ç–∞–∫—Ç–∏",
        "nav.jobs": "–í–∞–∫–∞–Ω—Å—ñ—ó",
        
        "common.loading": "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...",
        "common.error": "–ü–æ–º–∏–ª–∫–∞",
        "common.success": "–£—Å–ø—ñ—à–Ω–æ",
        "common.save": "–ó–±–µ—Ä–µ–≥—Ç–∏",
        "common.cancel": "–°–∫–∞—Å—É–≤–∞—Ç–∏",
        "common.submit": "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏",
        "common.back": "–ù–∞–∑–∞–¥",
        "common.next": "–î–∞–ª—ñ",
        "common.close": "–ó–∞–∫—Ä–∏—Ç–∏",
        
        "form.name": "–Ü–º'—è",
        "form.email": "–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞", 
        "form.phone": "–¢–µ–ª–µ—Ñ–æ–Ω",
        "form.company": "–ö–æ–º–ø–∞–Ω—ñ—è",
        "form.message": "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è",
        "form.required": "–û–±–æ–≤'—è–∑–∫–æ–≤–µ –ø–æ–ª–µ",
        "form.success": "–§–æ—Ä–º–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞",
        
        "page.home.title": "–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞",
        "page.about.title": "–ü—Ä–æ –Ω–∞—Å",
        "page.services.title": "–ù–∞—à—ñ –ø–æ—Å–ª—É–≥–∏",
        "page.contact.title": "–ö–æ–Ω—Ç–∞–∫—Ç–∏",
    }
    
    # –ê–Ω–≥–ª—ñ–π—Å—å–∫—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
    en_translations = {
        "nav.home": "Home",
        "nav.about": "About",
        "nav.services": "Services", 
        "nav.projects": "Projects",
        "nav.contact": "Contact",
        "nav.jobs": "Jobs",
        
        "common.loading": "Loading...",
        "common.error": "Error",
        "common.success": "Success",
        "common.save": "Save",
        "common.cancel": "Cancel",
        "common.submit": "Submit",
        "common.back": "Back",
        "common.next": "Next",
        "common.close": "Close",
        
        "form.name": "Name",
        "form.email": "Email",
        "form.phone": "Phone", 
        "form.company": "Company",
        "form.message": "Message",
        "form.required": "Required field",
        "form.success": "Form submitted successfully",
        
        "page.home.title": "Home Page",
        "page.about.title": "About Us",
        "page.services.title": "Our Services",
        "page.contact.title": "Contact",
    }
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª–∏
    import json
    
    for lang, translations in [("uk", uk_translations), ("en", en_translations)]:
        file_path = base_dir / "static_translations" / f"{lang}.json"
        
        with open(file_path, 'w', encoding='utf-8') as f:
            json.dump(translations, f, ensure_ascii=False, indent=2)
        
        print(f"üìÑ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ñ–∞–π–ª –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤: {file_path}")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üöÄ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤...")
    print("="*60)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
    create_file_structure()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ __init__.py —Ñ–∞–π–ª–∏
    create_basic_init_files()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ —Ñ–∞–π–ª–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
    create_basic_translation_files()
    
    print("\n" + "="*60)
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∞!")
    print("\n–¢–µ–ø–µ—Ä –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ:")
    print("1. –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –∫–æ–¥ –∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ñ–≤ —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Ñ–∞–π–ª–∏:")
    print("   - apps/api/utils/translations.py")
    print("   - apps/api/views/translations.py") 
    print("   - apps/api/management/commands/setup_translations.py")
    print("   - apps/api/management/commands/export_frontend_translations.py")
    print("   - apps/api/management/commands/validate_translations.py")
    print("\n2. –û–Ω–æ–≤–∏—Ç–∏ apps/api/urls.py")
    print("\n3. –ó–∞–ø—É—Å—Ç–∏—Ç–∏: python check_settings.py")

if __name__ == "__main__":
    main()